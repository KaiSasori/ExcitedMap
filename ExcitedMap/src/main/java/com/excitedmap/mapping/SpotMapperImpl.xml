<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.excitedmap.dao.SpotMapperImpl" >
  <resultMap id="ResultMapWithBLOBs" type="Spot" extends="com.excitedmap.dao.SpotMapper.ResultMapWithBLOBs" >
  </resultMap>
  <resultMap id="BaseResultMap" type="SpotImpl" extends="com.excitedmap.dao.SpotMapper.BaseResultMap" >
  	<result column="spot_id_favorite_count" property="spotFavoriteCount" jdbcType="INTEGER" />
  	<result column="spot_id_wish_count" property="spotWishCount" jdbcType="INTEGER" />
  	<result column="spot_id_footprint_count" property="spotFootprintCount" jdbcType="INTEGER" />
  	<result column="spot_popularity" property="spotPopularity" jdbcType="INTEGER" />
  	<result column="review_rating_avg" property="averageReviewRating" jdbcType="DOUBLE" />
  </resultMap>
  <select id="selectBySpotCategoryId" resultMap="ResultMapWithBLOBs" >
    select *
    from spot
    where spot_category_id = #{spotCategoryId};
  </select>
  <select id="selectByOrderByFavoriteCountWithLimit" resultMap="BaseResultMap" >
    select A.spot_id, spot_name, spot_category_id, ifnull(B.spot_id_favorite_count,0) as spot_id_favorite_count from spot as A
    left join (SELECT spot_id, COUNT(*) as spot_id_favorite_count from favorite GROUP BY spot_id) as B on A.spot_id = B.spot_id
	where spot_category_id = #{spotCategoryId}
    order by spot_id_favorite_count DESC LIMIT #{limit};
  </select>
  <select id="selectByOrderByWishCountWithLimit" resultMap="BaseResultMap" >
    select A.spot_id, spot_name, spot_category_id, ifnull(B.spot_id_wish_count,0) as spot_id_wish_count from spot as A
    left join (SELECT spot_id, COUNT(*) as spot_id_wish_count from wish GROUP BY spot_id) as B on A.spot_id = B.spot_id
	where spot_category_id = #{spotCategoryId}
    order by spot_id_wish_count DESC LIMIT #{limit};
  </select>
  <select id="selectByOrderByFootprintCountWithLimit" resultMap="BaseResultMap" >
    select A.spot_id, spot_name, spot_category_id, ifnull(B.spot_id_footprint_count, 0) as spot_id_footprint_count from spot as A
    left join (SELECT spot_id, COUNT(*) as spot_id_footprint_count from footprint GROUP BY spot_id) as B on A.spot_id = B.spot_id
	where spot_category_id = #{spotCategoryId}
    order by spot_id_footprint_count DESC LIMIT #{limit};
  </select>
  <select id="selectByOrderByAverageReviewRatingWithLimit" resultMap="BaseResultMap" >
  	select A.spot_id, spot_name, spot_category_id, ifnull(B.review_rating_avg, 0) as review_rating_avg from spot as A
  	left join (select spot_id, avg(review_rating) as review_rating_avg from review GROUP BY spot_id) as B on A.spot_id = B.spot_id
	where spot_category_id = #{spotCategoryId}
  	order by review_rating_avg DESC LIMIT #{limit};
  </select>
  <select id="selectBySpotNameKeywordOrderByPopularityWithLimit" resultMap="BaseResultMap" >
  	<bind name="pattern" value="'%' + _parameter + '%'" />
  	select A.spot_id, spot_name, spot_category_id, (ifnull(spot_id_footprint_count,0)+ifnull(spot_id_wish_count,0)+ifnull(spot_id_favorite_count,0)) as spot_popularity from spot as A
    left join (SELECT spot_id, COUNT(*) as spot_id_footprint_count from footprint GROUP BY spot_id) as B on A.spot_id = B.spot_id
    left join (SELECT spot_id, COUNT(*) as spot_id_wish_count from wish GROUP BY spot_id) as C on A.spot_id = C.spot_id
    left join (SELECT spot_id, COUNT(*) as spot_id_favorite_count from favorite GROUP BY spot_id) as D on A.spot_id = D.spot_id
    where spot_name like #{pattern};
    order by spot_popularity DESC LIMIT #{limit};
  </select>
  <select id="selectBySpotNameKeywordOrderByFavoriteCountWithLimit" resultMap="BaseResultMap" >
  	<bind name="pattern" value="'%' + _parameter + '%'" />
  	select A.spot_id, spot_name, spot_category_id, ifnull(B.spot_id_favorite_count,0) as spot_id_favorite_count from spot as A
    left join (SELECT spot_id, COUNT(*) as spot_id_favorite_count from favorite GROUP BY spot_id) as B on A.spot_id = B.spot_id
	where spot_name like #{pattern};
    order by spot_id_favorite_count DESC LIMIT #{limit};
  </select>
  <select id="selectBySpotNameKeywordOrderByFootprintCountWithLimit" resultMap="BaseResultMap" >
  	<bind name="pattern" value="'%' + _parameter + '%'" />
  	select A.spot_id, spot_name, spot_category_id, ifnull(B.spot_id_footprint_count, 0) as spot_id_footprint_count from spot as A
    left join (SELECT spot_id, COUNT(*) as spot_id_footprint_count from footprint GROUP BY spot_id) as B on A.spot_id = B.spot_id
	where spot_name like #{pattern};
    order by spot_id_footprint_count DESC LIMIT #{limit};
  </select>
  <select id="selectBySpotNameKeywordOrderByWishCountWithLimit" resultMap="BaseResultMap" >
  	<bind name="pattern" value="'%' + _parameter + '%'" />
  	select A.spot_id, spot_name, spot_category_id, ifnull(B.spot_id_wish_count,0) as spot_id_wish_count from spot as A
    left join (SELECT spot_id, COUNT(*) as spot_id_wish_count from wish GROUP BY spot_id) as B on A.spot_id = B.spot_id
	where spot_name like #{pattern};
    order by spot_id_wish_count DESC LIMIT #{limit};
  </select>
  <select id="selectBySpotNameKeywordOrderByAverageReviewRatingWithLimit" resultMap="BaseResultMap" >
  	<bind name="pattern" value="'%' + _parameter + '%'" />
  	select A.spot_id, spot_name, spot_category_id, ifnull(B.review_rating_avg, 0) as review_rating_avg from spot as A
  	left join (select spot_id, avg(review_rating) as review_rating_avg from review GROUP BY spot_id) as B on A.spot_id = B.spot_id
	where spot_name like #{pattern};
    order by review_rating_avg DESC LIMIT #{limit};
  </select>
  <select id="selectAverageReviewRatingForSpot" resultType="java.lang.Double" >
    select avg(review_rating) as review_rating_avg from review where spot_id = #{spotId};
  </select>
  <select id="selectReviewRatingCountForSpot" resultType="hashmap" >
  	select review_rating, count(*) as review_rating_count from review where spot_id = #{spotId} group by review_rating;
  </select>
  <select id="selectByOrderByPopularity" resultMap="BaseResultMap" >
  	select A.spot_id, spot_name, spot_category_id, (ifnull(spot_id_footprint_count,0)+ifnull(spot_id_wish_count,0)+ifnull(spot_id_favorite_count,0)) as spot_popularity from spot as A
    left join (SELECT spot_id, COUNT(*) as spot_id_footprint_count from footprint GROUP BY spot_id) as B on A.spot_id = B.spot_id
    left join (SELECT spot_id, COUNT(*) as spot_id_wish_count from wish GROUP BY spot_id) as C on A.spot_id = C.spot_id
    left join (SELECT spot_id, COUNT(*) as spot_id_favorite_count from favorite GROUP BY spot_id) as D on A.spot_id = D.spot_id
    where spot_category_id = #{spotCategoryId}
    order by spot_popularity DESC LIMIT #{limit};
  </select>
</mapper>